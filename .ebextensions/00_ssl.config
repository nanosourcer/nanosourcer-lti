Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "S3"
          buckets: ["oei-server-certificates"]
          roleName:
            "Fn::GetOptionSetting":
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
packages:
  yum:
    mod24_ssl : []
    jq: []
    mod24_ssl : []
    jq : []
    libxml2 : []
    libxslt : []
    libxml2-devel : []
    libxslt-devel : []
    libjpeg-turbo : []
    libjpeg-turbo-devel : []
files:
  /etc/pki/tls/certs/InCommonRSAServerCA_2.cer:
    mode: "000660"
    owner: root
    group: root
    source: https://s3.amazonaws.com/oei-server-certificates/InCommonRSAServerCA_2.cer
  /etc/pki/tls/certs/USERTrustRSAAddTrustCA.cer:
    mode: "000660"
    owner: root
    group: root
    source: https://s3.amazonaws.com/oei-server-certificates/USERTrustRSAAddTrustCA.cer
  /etc/pki/tls/certs/nanosourcer.cer:
    mode: "000660"
    owner: root
    group: root
    source: https://s3.amazonaws.com/oei-server-certificates/nanosourcer.ctl.utexas.edu.cer
  /etc/pki/tls/private/nanosourcer.key.encrypted.json:
    mode: "000660"
    owner: root
    group: root
    source: https://s3.amazonaws.com/oei-server-certificates/nanosourcer.ctl.utexas.edu.key.encrypted.json
  /etc/pki/tls/certs/nanosourcer-beta.cer:
    mode: "000660"
    owner: root
    group: root
    source: https://s3.amazonaws.com/oei-server-certificates/nanosourcer-beta.ctl.utexas.edu.cer
  /etc/pki/tls/private/nanosourcer-beta.key.encrypted.json:
    mode: "000660"
    owner: root
    group: root
    source: https://s3.amazonaws.com/oei-server-certificates/nanosourcer-beta.ctl.utexas.edu.key.encrypted.json
container_commands:
  01-echo-env-var:
    command: echo "UTLS_SERVER_ENV ${UTLS_SERVER_ENV}"
  02-provision-cert:
    command: |
        echo "provision-cert starting..."
        rm -f /etc/pki/tls/certs/server.cer
        if [ "${UTLS_SERVER_ENV}" == "PROD" ]; then
            echo "provision-cert PROD"
            mv /etc/pki/tls/certs/nanosourcer.cer /etc/pki/tls/certs/server.cer
            rm /etc/pki/tls/certs/nanosourcer-beta.cer
        elif [ "${UTLS_SERVER_ENV}" == "BETA" ]; then
            echo "provision-cert BETA"
            mv /etc/pki/tls/certs/nanosourcer-beta.cer /etc/pki/tls/certs/server.cer
            rm /etc/pki/tls/certs/nanosourcer.cer
        fi  
        chmod 640 /etc/pki/tls/certs/server.cer
    cwd: /etc/pki/tls/certs
  03-provision-key:
      command: |
          rm -f /etc/pki/tls/private/server.key*
          if [ "${UTLS_SERVER_ENV}" == "PROD" ]; then
              mv /etc/pki/tls/private/nanosourcer.key.encrypted.json /etc/pki/tls/private/server.key.encrypted.json
              rm /etc/pki/tls/private/nanosourcer-beta.key*
          elif [ "${UTLS_SERVER_ENV}" == "BETA" ]; then
              mv /etc/pki/tls/private/nanosourcer-beta.key.encrypted.json /etc/pki/tls/private/server.key.encrypted.json
              rm /etc/pki/tls/private/nanosourcer.key*
          fi
          chmod 640 /etc/pki/tls/private/server.key.encrypted.json
      cwd: /etc/pki/tls/private
  04-server-chain:
      command: {"Fn::Join" : [" ", [
          "echo",
          ">> server.cer;",
          "cat",
          "InCommonRSAServerCA_2.cer",
          "USERTrustRSAAddTrustCA.cer",
          "> server-chain.cer;",
          "chmod 0444 server-chain.cer",
      ]]}
      cwd: /etc/pki/tls/certs
  05-decrypt-key:
      command: {"Fn::Join" : [" ", [
          "cat server.key.encrypted.json",
          "| jq -r .CiphertextBlob",
          "| openssl base64 -d -A",
          "> server.key.encrypted;",
          "aws kms decrypt",
          "--region us-east-1",
          "--output json",
          "--ciphertext-blob fileb://server.key.encrypted",
          "| jq -r .Plaintext",
          "| openssl base64 -d -A",
          "> server.key;",
          "chmod 0400 server.key*",
      ]]}
      cwd: /etc/pki/tls/private

#  10-server-chain:
#    command: { "Fn::Join" : [" ", [
#      "echo",
#      ">> server.crt;",
#      "cat",
#      "InCommonRSAServerCA_2.cer",
#      "USERTrustRSAAddTrustCA.cer",
#      ">> server-chain.crt;",
#      "chmod 0444 server-chain.crt",
#    ]]}
#    cwd: /etc/pki/tls/certs
#  20-decrypt-key:
#    command: { "Fn::Join" : [" ", [
#      "cat server.key.encrypted.json",
#      "| jq -r .CiphertextBlob",
#      "| openssl base64 -d -A",
#      "> server.key.encrypted;",
#      "aws kms decrypt",
#      "--region us-east-1",
#      "--output json",
#      "--ciphertext-blob fileb://server.key.encrypted",
#      "| jq -r .Plaintext",
#      "| openssl base64 -d -A",
#      "> server.key;",
#      "chmod 0400 server.key*",
#    ]]}
#    cwd: /etc/pki/tls/certs
